"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const web3_js_1 = require("@_koii/web3.js");
const index_1 = require("./index");
const koiiClient = index_1.KoiiStorageClient.getInstance({ debug: true });
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        let x = new web3_js_1.Keypair();
        let data = yield koiiClient.uploadFile('/home/ghazanfer/Downloads/task(79).log', x);
        console.log(data);
        // let fileContent = await koiiClient.getFile('bafybeihhbnu2zgecnwmkmbp5u5s4ssxx5tn52awy7xxajly5ngp4beqora', 'testing_temp_stuff.csv');
        // await koiiClient.saveBlobAsFile(fileContent, 'README22.md');
        // console.log(fileContent);
        // console.log(await fileContent.text())
    });
}
main();
